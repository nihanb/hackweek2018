# Service Information File for System-Z in YAML format.

# Basic YAML syntax here: http://www.yaml.org/spec/1.2/spec.html
# Online parser here: http://yaml-online-parser.appspot.com/
# Short version:
#   Strings: single, double or no quotes. Multiline string? Read docs.
#   Lists: with [] or each entry indented on a line with a - .
#   Maps: with {key: val} or each pair indented on a line.
#     (also, x means "x", but no means false, because reasons.)

# Unique ID for this component (in System-Z):
id: abuck-spotty-world

# Brief description of this component:
description: hackweek 2018 project

# The system this component belongs to:
system: abuck-spotty-world

# Main owner of this component (LDAP group or individual):
owner: nihanb

# Intended usage of this component:
#   'private' - only for use by the owner
#   'public'  - exposes an api for other squads (like metadata)
# Components that are under development, experimental, not
# supported, replaced, liable to change without warning, etc.
# should generally be marked as private.
visibility: private

# A list of other components (services, data stores, etc.) on which
# this component depends. Must be valid service_discovery names
# registered in the Nameless service.
dependencies: []

facts:
  # The type of the component. The value will be used by System-Z
  # to enable additional features that only are relevant for certain
  # types of components.
  component_type: website
  
  # For websites, whether the website is hosted by Spotify within
  # our GCP infrastructure or externally.
  website_hosting: internal

  # Links to the latest definitive documentation for this service.
  # Markdown is supported, e.g. docs: '[Title] (URL)'
  docs:

  # A list of the names under which this component can be discovered
  # on production machines. Must be valid service_discovery names
  # registered in the Nameless service.
  service_discovery:
    - abuck-spotty-world

  # The Puppet role of this component in a production environment:
  role: abuckspottyworld  # IMPORTANT! Needed for provisioning!

  # Lifecycle is a new experimental feature
  # we prefer one of: experimental, production,deprecated, removed
  lifecycle: experimental

  # Whether Puppet should automatically install the Helios agent on
  # machines with a role that is using this component: 
  helios_agent: true

  # Any tags you like, to help refine search results.
  # tags:
  #  - teapot

  # Links to support systems. Remove hash to enable.
  #slack_channel: {channel}  # Link to Slack channel.
  #pagerdutykey: decafbad  # PagerDuty API key.

  # Custom key-values, for owner's own use.
  #custom_key: custom_value
